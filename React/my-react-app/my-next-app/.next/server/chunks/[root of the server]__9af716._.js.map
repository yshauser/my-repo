{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yhauser/workspace/my-repo/React/my-react-app/my-next-app/pages/api/saveToJsonFile.ts"],"sourcesContent":["import type { NextApiRequest, NextApiResponse } from 'next';\r\nimport fs from 'fs/promises';\r\nimport path from 'path';\r\nimport { group } from 'console';\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  console.log ('in save tasks');\r\n  const { filename, data, type } = req.body;\r\n  if (!filename || typeof filename !== 'string') {\r\n    return res.status(400).json({ error: 'Invalid or missing fileName' });\r\n  }\r\n\r\n  if (!data || typeof data !== 'object') {\r\n    return res.status(400).json({ error: 'Invalid or missing data' });\r\n  }\r\n  \r\n  const DATA_FILE_PATH = path.join(process.cwd(), '..','public','db', `${filename}.json`);\r\n  console.log ('Processing request: ', {filename, type, data});\r\n\r\n    // Ensure the directory exists\r\n    await fs.mkdir(path.dirname(DATA_FILE_PATH), { recursive: true });\r\n\r\n    // Read existing data if the file exists\r\n    let existingData = [];\r\n    try {\r\n      const fileContent = await fs.readFile(DATA_FILE_PATH, 'utf8');\r\n      existingData = JSON.parse(fileContent);\r\n      // console.log ('Existing Data', {existingData});\r\n    } catch (readError) {\r\n      if ((readError as NodeJS.ErrnoException).code !== 'ENOENT') {\r\n        console.error('Error reading file:', readError);\r\n        return res.status(500).json({ error: 'Failed to read existing data' });\r\n      }\r\n      // File does not exist; will create a new one\r\n      console.log('File does not exist. Initializing new data file.');\r\n      existingData = [];\r\n    }\r\n    console.log ('Existing Data after try', {existingData});\r\n\r\n  if (req.method === 'GET') {\r\n    try {\r\n      res.status(200).json(existingData);\r\n    } catch (error) {\r\n      console.error('Error reading existing data:', error);\r\n      res.status(200).json([]); // Return empty array if file doesn't exist\r\n    }\r\n  } else if (req.method === 'POST') {\r\n    try {\r\n      console.log ('save tasks POST');\r\n      if (type === 'suspension') {\r\n        console.log ('med data suspension');\r\n        // Ensure `medicines` and `suspension` are initialized\r\n        if (!existingData.medicines){\r\n          existingData.medicines = {suspension:[], caplets: [], granules: []};\r\n        }else if (!Array.isArray(existingData.medicines.suspension)){\r\n          existingData.medicines.suspension = [];\r\n        }\r\n\r\n        const updatedEntry = req.body.data;\r\n        const existingIndex = existingData.medicines.suspension.findIndex((entry: { id: string }) => entry.id === updatedEntry.id);\r\n        if (existingIndex !== -1) {\r\n          // Overwrite the existing entry\r\n          console.log ('index suspension', {existingIndex, updatedEntry})\r\n          existingData.medicines.suspension[existingIndex] = updatedEntry;\r\n        } else {\r\n         existingData.medicines.suspension.push(data);\r\n        }\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });\r\n\r\n      } else if (type === 'caplets') {\r\n          console.log ('med data caplets');\r\n          if (!existingData.medicines){\r\n            existingData.medicines = {suspension:[], caplets: [], granules: []};\r\n          }else if (!Array.isArray(existingData.medicines.caplets)){\r\n            existingData.medicines.caplets = [];\r\n          }\r\n        const updatedEntry = req.body.data;\r\n        const existingIndex = existingData.medicines.caplets.findIndex((entry: { id: string }) => entry.id === updatedEntry.id);\r\n        if (existingIndex !== -1) {\r\n          // Overwrite the existing entry\r\n          console.log ('index caplets', {existingIndex, updatedEntry})\r\n          existingData.medicines.caplets[existingIndex] = updatedEntry;\r\n        } else {\r\n          existingData.medicines.caplets.push(data);\r\n        }\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });\r\n      } else if (type === 'granules') {\r\n        console.log ('med data granules');\r\n        if (!existingData.medicines){\r\n          existingData.medicines = {suspension:[], caplets: [], granules: []};\r\n        }else if (!Array.isArray(existingData.medicines.granules)){\r\n          existingData.medicines.granules = [];\r\n        }\r\n\r\n        const updatedEntry = req.body.data;\r\n        const existingIndex = existingData.medicines.granules.findIndex((entry: { id: string }) => entry.id === updatedEntry.id);\r\n        if (existingIndex !== -1) {\r\n          // Overwrite the existing entry\r\n          console.log ('index granules', {existingIndex, updatedEntry})\r\n          existingData.medicines.granules[existingIndex] = updatedEntry;\r\n        } else {\r\n          existingData.medicines.granules.push(data);\r\n        }\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });\r\n                  \r\n      } else  {\r\n        console.log ('type not suspension, caplets not granules', {data});\r\n        const updatedEntry = req.body.data;\r\n        const existingIndex = existingData.findIndex((entry: { id: string }) => entry.id === updatedEntry.id);\r\n        if (existingIndex !== -1) {\r\n          existingData[existingIndex] = updatedEntry;\r\n          console.log ('Overwrite the existing entry', {existingIndex, updatedEntry});\r\n        } else {\r\n          console.log ('Else POST');\r\n          if (type === 'kids-order'|| type === 'scheduled'){\r\n            // empty the existing data so the kids-list will replace the exisiting data\r\n            // existingData = [];\r\n            console.log ('kids-order/scheduled - no need for []');\r\n            existingData = updatedEntry;\r\n          }else if (type === 'log'){\r\n            existingData = updatedEntry.flat();\r\n        }else{\r\n            // Add as a new entry\r\n            console.log ('existingIndex', {existingIndex, updatedEntry})\r\n            existingData.push(updatedEntry);\r\n          }\r\n        }\r\n        // existingData.push(data);\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });\r\n      }\r\n    \r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n      res.status(500).json({ error: 'Failed to save data' });\r\n    }\r\n  } else if (req.method === 'DELETE') {\r\n      // assume that the entry is removed in the app, so the data is already updated\r\n      console.log ('DELETE action updated data: ', data);\r\n      if (type === 'suspension') {\r\n        console.log('med data suspension');\r\n        if (!existingData.medicines) {\r\n          existingData.medicines = { suspension: [], caplets: [], granules:[] };\r\n        }      \r\n        if (!Array.isArray(existingData.medicines.suspension)) {\r\n          existingData.medicines.suspension = [];\r\n        }\r\n        existingData.medicines.suspension = data; // Assign directly instead of push\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });\r\n      \r\n      } else if (type === 'caplets') {\r\n        console.log('med data caplets');\r\n        if (!existingData.medicines) {\r\n          existingData.medicines = { suspension: [], caplets: [] ,  granules:[]};\r\n        }\r\n        existingData.medicines.caplets = data; // Fix: Assign directly\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });     \r\n\r\n      } else if (type === 'granules') {\r\n        console.log('med data granules');\r\n        if (!existingData.medicines) {\r\n          existingData.medicines = { suspension: [], caplets: [],  granules:[] };\r\n        }\r\n        existingData.medicines.granules = data; // Fix: Assign directly\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(existingData, null, 2));\r\n        res.status(200).json({ success: true });     \r\n      \r\n      } else {\r\n        await fs.writeFile(DATA_FILE_PATH, JSON.stringify(data, null, 2));\r\n        res.status(200).json({ success: true });\r\n      }\r\n    } else {\r\n        res.setHeader('Allow', ['GET', 'POST', 'DELETE']);\r\n        res.status(405).json({ error: `Method ${req.method} not allowed` });\r\n      }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yhauser/workspace/my-repo/React/my-react-app/my-next-app/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yhauser/workspace/my-repo/React/my-react-app/my-next-app/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yhauser/workspace/my-repo/React/my-react-app/my-next-app/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/yhauser/workspace/my-repo/React/my-react-app/my-next-app/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}